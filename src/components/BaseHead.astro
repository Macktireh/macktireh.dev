---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import { SITE } from "@src/consts";
import {
  type LangType,
  DEFAULT_LANG,
  LOCALES,
  pathNameIsInLanguage,
  getLocalizedPathname,
} from "@src/i18n/utils";
import "@src/styles/style.css";

interface Props {
  metadata: {
    title: string;
    description: string;
    author?: string;
    ogImage?: string;
    lang?: LangType;
  };
  hasRedirect?: boolean;
}

const {
  title,
  description,
  author,
  ogImage = SITE.ogImageSite,
  lang = DEFAULT_LANG,
} = Astro.props.metadata;
const { hasRedirect = true } = Astro.props;

const canonicalPathname = pathNameIsInLanguage(Astro.url.pathname, lang)
  ? Astro.url.pathname
  : getLocalizedPathname(Astro.url.pathname, DEFAULT_LANG);
const canonicalURL = new URL(canonicalPathname, Astro.site);


const socialImageURL = new URL(ogImage ?? SITE.ogImageSite, Astro.url.origin)
  .href;

const alternateLinks = LOCALES.map((_lang: LangType) => {
  return {
    href: new URL(getLocalizedPathname(Astro.url.pathname, _lang), Astro.site),
    hreflang: _lang,
  };
});
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="canonical" href={canonicalURL} />
<meta name="generator" content={Astro.generator} />

<!-- Alternate URLs -->
{
  alternateLinks.map(({ href, hreflang }) => (
    <link rel="alternate" href={href} hreflang={hreflang} />
  ))
}

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta name="author" content={author} />
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={socialImageURL} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={socialImageURL} />

<!-- Font preloads -->
<link
  rel="preload"
  href="/fonts/atkinson-regular.woff"
  as="font"
  type="font/woff"
  crossorigin
/>
<link
  rel="preload"
  href="/fonts/atkinson-bold.woff"
  as="font"
  type="font/woff"
  crossorigin
/>

{hasRedirect && (
  <script define:vars={{ LOCALES }} is:inline>
    async function redirectPreferredLocale() {
      const preferredLang = navigator.language.split("-")[0];
      const currentLang = document.documentElement.lang;
      if (preferredLang !== currentLang && LOCALES.includes(preferredLang)) {
        const pathName = getPathName(preferredLang);
        if (await checkUrlExists(pathName)) {
          window.location.href = pathName;
        }
      }
    }
    function getPathName(preferredLang) {
      const pathNames = window.location.pathname.split("/");
      pathNames[1] = preferredLang;
      return pathNames.join("/");
    }
    async function checkUrlExists(url) {
      const response = await fetch(url);
      return response.status === 200;
    }
    redirectPreferredLocale();
  </script>
)}

