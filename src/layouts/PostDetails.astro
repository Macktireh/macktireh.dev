---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "@src/components/FormattedDate.astro";
import Layout from "@src/layouts/Layout.astro";
import { useTranslations, type LangType } from "@src/i18n/utils";
import Icon from "@src/components/Icon.astro";
import PostComments from "@src/components/PostComments.astro";

type Props = CollectionEntry<"posts">["data"] & {
  content: string;
};

const {
  title,
  description,
  author,
  pubDate,
  updatedDate,
  heroImage,
  lang,
  content,
} = Astro.props;

const t = useTranslations(lang as LangType);

function getTimeRead(content: string) {
  const wpm = 200;
  const words = content.trim().split(/\s+/).length;
  const time = Math.ceil(words / wpm);
  return time;
}
---

<Layout
  title={`${title} | ${t("site.title")}`}
  description={description}
  heroImage={heroImage}
  pubDate={pubDate}
  updatedDate={updatedDate}
  lang={lang}
>
  <slot name="lang-selector" slot="lang-selector" />
  <main>
    <nav class="go-back">
      <button
        class="back-btn"
        onclick="(() => (history.length === 1) ? window.location = '/' : history.back())()"
      >
        <Icon name="arrow" /><span>{t("go.back")}</span>
      </button>
    </nav>
    <article>
      <div class="hero-image">
        {heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
      </div>
      <div class="prose">
        <div class="title">
          <div class="meta">
            <div class="date">
              <span>{t("published.on")} <FormattedDate date={pubDate} /></span>
              <div class="time-read">
                <Icon name="read" size={22} />
                <span class="time-read-text"
                  >{getTimeRead(content)} {t("time-read")}</span
                >
              </div>
            </div>
            <div class="author">
              <img src="/images/mack.png" alt="mack" />
              <span>{t("by")}</span>
              <strong>{author}</strong>
            </div>
            {
              updatedDate && (
                <span>
                  {t("last.updated.on")} <FormattedDate date={pubDate} />
                </span>
              )
            }
          </div>
          <h2>{title}</h2>
          <hr />
        </div>
        <slot />
      </div>
    </article>
    <PostComments />
  </main>
</Layout>
