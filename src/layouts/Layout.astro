---
import type { CollectionEntry } from "astro:content";
import BaseHead from "@src/components/BaseHead.astro";
import Header from "@src/components/Header.astro";
import Footer from "@src/components/Footer.astro";
import { getLangFromUrl, useTranslations, type LangType } from "@src/i18n/utils";
import { ViewTransitions } from "astro:transitions";
import LangSelector from "@src/components/LangSelector.astro";
import { IsDark } from "@src/consts";

type Props = Omit<CollectionEntry<"blog">["data"], "pubDate"> & {
  pubDate?: Date;
  translated?: boolean;
};

const { title, description, translated } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang as LangType);
---

<!doctype html>
<html lang={lang} data-theme={IsDark ? "dark" : "light"}>
  <head>
    <script is:inline>
      if (localStorage.getItem("theme") === "light") {
        document.querySelector("html")?.setAttribute("data-theme", "light");
      } else {
        document.querySelector("html")?.setAttribute("data-theme", "dark");
      }
    </script>
    <ViewTransitions />
    <BaseHead lang={lang} title={title} description={description} />
  </head>
  <body>
    {translated ? <LangSelector /> : null}
    <Header title={t("site.title")} lang={lang} />
    <slot />
    <Footer />
  </body>
</html>
