---
import LangSelector from "@src/components/LangSelector.astro";
import { getPosts } from "@src/content/config";
import { DEFAULT_LANG } from "@src/i18n/utils";
import PostDetails from "@src/layouts/PostDetails.astro";

export async function getStaticPaths() {
  const pages = await getPosts();

  const paths = pages.map((page) => {
    return {
      params: { lang: page.data.lang || DEFAULT_LANG, slug: page.blog_slug },
      props: page,
    };
  });

  return paths;
}

const { lang, slug } = Astro.params;
const page = Astro.props;

const locales = (await getPosts())
  .filter((post) => post.blog_slug === slug)
  .map((post) => post.data.lang);
const { Content } = await page.render();
---

<PostDetails {...page.data} content={page.body} lang={lang} translated={false}>
  <LangSelector slot="lang-selector" locales={locales} />
  <Content />
</PostDetails>
<script>
  initializeCopyButtonVisibility();
  document.addEventListener("astro:after-swap", initializeCopyButtonVisibility);

  function initializeCopyButtonVisibility() {
    const mediaQuery = window.matchMedia("(max-width: 720px)");
    if (!hideCopyButtonOnMobile()) {
      updateCopyButtonVisibility(mediaQuery);
      mediaQuery.addEventListener("change", () =>
        updateCopyButtonVisibility(mediaQuery)
      );
    }
  }

  function updateCopyButtonVisibility(mediaQuery) {
    toggleCopyButtonDisplay(mediaQuery.matches ? "none" : "flex");
  }

  function hideCopyButtonOnMobile() {
    const isMobileDevice =
      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
        navigator.userAgent
      );
    if (isMobileDevice) {
      toggleCopyButtonDisplay("none");
    }
    return isMobileDevice;
  }

  function toggleCopyButtonDisplay(displayStyle) {
    document.querySelectorAll(".copy").forEach((button: HTMLElement) => {
      button.style.display = displayStyle;
    });
  }
</script>
