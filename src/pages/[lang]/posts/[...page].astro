---
import {
  getPostsSorted,
  getPostsByLang,
  type BlogType,
} from "@src/services/posts";
import FormattedDate from "@src/components/FormattedDate.astro";
import { type PageType } from "@src/helpers/types";
import Layout from "@src/layouts/Layout.astro";
import { LOCALES, useTranslations, type LangType } from "@src/i18n/utils";
import { SITE } from "@src/consts";
import Link from "@src/components/Link.astro";
import LangSelector from "@src/components/LangSelector.astro";
import Pagination from "@src/components/Pagination.astro";

export async function getStaticPaths({ paginate }) {
  const posts = await getPostsSorted();
  return LOCALES.flatMap((lang) => {
    const posts_filtered = posts.filter((post) => {
      return post?.data?.lang === lang;
    });
    return paginate(posts_filtered, {
      params: { lang },
      pageSize: SITE.postsPaginationSize,
    });
  });
}

const { lang } = Astro.params;
const { page } = Astro.props as { page: PageType<BlogType> };
const t = useTranslations(lang);

let locales: LangType[] = [];

for (const _lang of LOCALES) {
  const posts = await getPostsByLang(_lang);
  const totalPages = Math.ceil(posts.length / SITE.postsPaginationSize);
  if (totalPages >= page.currentPage) {
    locales.push(_lang);
  }
}
---

<Layout
  title=`${t("navbar.posts")} | ${t("site.title")}`
  description={t("site.description", { firstname: SITE.authorFirstName })}
  lang={lang}
>
  <LangSelector
    slot="lang-selector"
    locales={locales.length > 0 ? locales : undefined}
  />
  <main class="main-posts">
    <section id="posts-list">
      {
        page.data.length > 0 ? (
          <ul>
            {page.data.map((post) => (
              <li>
                <Link href={post.pathname} lang={lang}>
                  <img
                    width={720}
                    height={360}
                    src={post.data.heroImage}
                    alt=""
                  />
                  <h4 class="title">{post.data.title}</h4>
                  <p class="date">
                    <FormattedDate date={post.data.pubDate} />
                  </p>
                </Link>
              </li>
            ))}
          </ul>
        ) : (
          <div class="coming-soon">
            <h2>{t("coming.soon")}</h2>
            <h5>{t("coming.soon.description")}</h5>
          </div>
        )
      }
      <Pagination page={page} lang={lang} />
    </section>
  </main>
</Layout>
